#! /bin/bash

function setprompt {

  ##
  ## Set some colours for easy reference.
  ##
  local        BLACK="\[\033[0;30m\]"
  local         BLUE="\[\033[0;34m\]"
  local        GREEN="\[\033[0;32m\]"
  local         CYAN="\[\033[0;36m\]"
  local          RED="\[\033[0;31m\]"
  local       PURPLE="\[\033[0;35m\]"
  local        BROWN="\[\033[0;33m\]"
  local   LIGHT_GREY="\[\033[0;37m\]"
  local    DARK_GREY="\[\033[1;30m\]"
  local   LIGHT_BLUE="\[\033[1;34m\]"
  local  LIGHT_GREEN="\[\033[1;32m\]"
  local   LIGHT_CYAN="\[\033[1;36m\]"
  local    LIGHT_RED="\[\033[1;31m\]"
  local LIGHT_PURPLE="\[\033[1;35m\]"
  local       YELLOW="\[\033[1;33m\]"
  local        WHITE="\[\033[1;37m\]"
  local    NO_COLOUR="\[\033[0m\]"


  # set date colour based on $HOSTNAME
  local HOST_COLOUR=$BROWN

  ##
  ## Get the current system load (1 min, 5 min, 15 min)
  ##

  local load_1=$(uptime | sed -e 's/^.*: \([0-9.]\+\), \([0-9.]\+\), \([0-9.]\+\).*$/\1/')
  local load_5=$(uptime | sed -e 's/^.*: \([0-9.]\+\), \([0-9.]\+\), \([0-9.]\+\).*$/\2/')
  local load_15=$(uptime | sed -e 's/^.*: \([0-9.]\+\), \([0-9.]\+\), \([0-9.]\+\).*$/\3/')

  local load_1_int=$(echo $load_1 | sed -e 's/^\([0-9]\+\).*/\1/')
  local load_5_int=$(echo $load_5 | sed -e 's/^\([0-9]\+\).*/\1/')
  local load_15_int=$(echo $load_15 | sed -e 's/^\([0-9]\+\).*/\1/')

  if [ $load_1_int -lt 2 ]; then
    load_1c="$LIGHT_GREEN$load_1$NO_COLOUR"
  elif [ $load_1_int -lt 4 ]; then
    load_1c="$YELLOW$load_1$NO_COLOUR"
  else
    load_1c="$LIGHT_RED$load_1$NO_COLOUR"
  fi

  if [ $load_5_int -lt 2 ]; then
    load_5c="$LIGHT_GREEN$load_5$NO_COLOUR"
  elif [ $load_5_int -lt 4 ]; then
    load_5c="$YELLOW$load_5$NO_COLOUR"
  else
    load_5c="$LIGHT_RED$load_5$NO_COLOUR"
  fi

  if [ $load_15_int -lt 2 ]; then
    load_15c="$LIGHT_GREEN$load_15$NO_COLOUR"
  elif [ $load_15_int -lt 4 ]; then
    load_15c="$YELLOW$load_15$NO_COLOUR"
  else
    load_15c="$LIGHT_RED$load_15$NO_COLOUR"
  fi

  
  ##
  ## Check if some divices are mounted.
  ##

  if [ `mount | grep '^/dev/cdroms/cdrom0' | wc -l` -gt 0 ]; then
    mnt_cd="${WHITE}[${LIGHT_PURPLE}dvd${WHITE}]${NO_COLOUR}"
  else
    mnt_cd=""
  fi

  if [ `mount | grep '^/dev/scsi/host0/bus0/target1/lun0/cd' | wc -l` -gt 0 ]; then
    mnt_cdr="${WHITE}[${LIGHT_PURPLE}cdr${WHITE}]${NO_COLOUR}"
  else
    mnt_cdr=""
  fi
  
  if [ `mount | grep '^/dev/scsi/host1/bus0/target0/lun0/part1' | wc -l` -gt 0 ]; then
    mnt_cf="${WHITE}[${LIGHT_PURPLE}cf${WHITE}]${NO_COLOUR}"
  else
    mnt_cf=""
  fi

  if [ `mount | grep '^/dev/md0' | wc -l` -gt 0 ]; then
    mnt_raid="${WHITE}[${LIGHT_PURPLE}raid${WHITE}]${NO_COLOUR}"
  else
    mnt_raid=""
  fi
  

  ##
  ## Check on the partition usage.
  ##

  local df_root=$(df -P /| awk '$6 ~ "^/$" { print $5 }' | sed -e 's/\(.\+\)./\1/')

  if [ $df_root -lt 70 ]; then
    df_root_c="$LIGHT_GREEN/=$df_root%$NO_COLOUR"
  elif [ $df_root -lt 90 ]; then
    df_root_c="$YELLOW/=$df_root%$NO_COLOUR"
  else
    df_root_c="$LIGHT_RED/=$df_root%$NO_COLOUR"
  fi


  ##
  ## check network connections
  ##

  local connections=$(netstat -nut | egrep '^tcp|udp' | wc -l)

  if [ $connections -lt 25 ]; then
    connections="$LIGHT_GREEN+$connections$NO_COLOUR"
  elif [ $connections -lt 50 ]; then
    connections="$YELLOW+$connections$NO_COLOUR"
  else
    connections="$LIGHT_RED+$connections$NO_COLOUR"
  fi

  local battery=$(</sys/class/power_supply/BAT0/capacity)

  if [ ${battery} -lt 25 ]; then
    battery="${LIGHT_RED}${battery}${NO_COLOUR}"
  elif [ ${battery} -lt 50 ]; then
    battery="${YELLOW}${battery}${NO_COLOUR}"
  else
    battery="${LIGHT_GREEN}${battery}${NO_COLOUR}"
  fi

  ##
  ## Git
  ##

  local branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
  if [ ${branch} ]; then
    commit=$(git rev-parse --short HEAD)
    branch="${WHITE}[${GREEN}${branch}:${commit}${WHITE}]${NO_COLOUR}"
  fi

  ##
  ## Python
  ##

  local virtualenv=${VIRTUAL_ENV}
  if [ ${virtualenv} ]; then
    virtualenv=$(echo ${virtualenv} | sed -e 's#^.*virtualenvs/##')
    virtualenv=" ${BLUE}${virtualenv}${NO_COLOUR}"
  fi

  ##
  ## Set the username string.
  ##

  if [ $UID -eq 0 ]; then
    local user="${WHITE}[${LIGHT_RED}\u${WHITE}@${HOST_COLOUR}\h${WHITE}]"
  else
    local user="${WHITE}[${HOST_COLOUR}\u@\h${WHITE}]"
  fi

PS1="\[\e]0;\a\]${user}\
${WHITE}[${NO_COLOUR}${load_1c}|${load_5c}|${load_15c}${WHITE}]${NO_COLOUR}\
${WHITE}[${NO_COLOUR}${df_root_c}${WHITE}]${NO_COLOUR}\
${WHITE}[${NO_COLOUR}${connections}${WHITE}]${NO_COLOUR}\
${WHITE}[${NO_COLOUR}${battery}${WHITE}]${NO_COLOUR}\
${WHITE}[${CYAN}\w$WHITE]${branch}${NO_COLOUR}\n\
${WHITE}(${CYAN}`date '+%F %T'`${virtualenv}${WHITE}) \\$ ${NO_COLOUR}"

}

export PROMPT_COMMAND=setprompt
